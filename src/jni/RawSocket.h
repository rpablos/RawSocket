/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class net_RawSocket */

#ifndef _Included_net_RawSocket
#define _Included_net_RawSocket
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     net_RawSocket
 * Method:    _open
 * Signature: (ZI)I
 */
JNIEXPORT jint JNICALL Java_net_RawSocket__1open
  (JNIEnv *, jobject, jboolean, jint);

/*
 * Class:     net_RawSocket
 * Method:    _close
 * Signature: (I)I
 */
JNIEXPORT jint JNICALL Java_net_RawSocket__1close
  (JNIEnv *, jobject, jint);

/*
 * Class:     net_RawSocket
 * Method:    _setBindToDevice
 * Signature: (ILjava/lang/String;)I
 */
JNIEXPORT jint JNICALL Java_net_RawSocket__1setBindToDevice
  (JNIEnv *, jobject, jint, jstring);

/*
 * Class:     net_RawSocket
 * Method:    _setReceiveTimeout
 * Signature: (II)I
 */
JNIEXPORT jint JNICALL Java_net_RawSocket__1setReceiveTimeout
  (JNIEnv *, jobject, jint, jint);

/*
 * Class:     net_RawSocket
 * Method:    _getReceiveTimeout
 * Signature: (I)I
 */
JNIEXPORT jint JNICALL Java_net_RawSocket__1getReceiveTimeout
  (JNIEnv *, jobject, jint);

/*
 * Class:     net_RawSocket
 * Method:    _setSendTimeout
 * Signature: (II)I
 */
JNIEXPORT jint JNICALL Java_net_RawSocket__1setSendTimeout
  (JNIEnv *, jobject, jint, jint);

/*
 * Class:     net_RawSocket
 * Method:    _getSendTimeout
 * Signature: (I)I
 */
JNIEXPORT jint JNICALL Java_net_RawSocket__1getSendTimeout
  (JNIEnv *, jobject, jint);

/*
 * Class:     net_RawSocket
 * Method:    _getSendBufferSize
 * Signature: (I)I
 */
JNIEXPORT jint JNICALL Java_net_RawSocket__1getSendBufferSize
  (JNIEnv *, jobject, jint);

/*
 * Class:     net_RawSocket
 * Method:    _setSendBufferSize
 * Signature: (II)I
 */
JNIEXPORT jint JNICALL Java_net_RawSocket__1setSendBufferSize
  (JNIEnv *, jobject, jint, jint);

/*
 * Class:     net_RawSocket
 * Method:    _getReceiveBufferSize
 * Signature: (I)I
 */
JNIEXPORT jint JNICALL Java_net_RawSocket__1getReceiveBufferSize
  (JNIEnv *, jobject, jint);

/*
 * Class:     net_RawSocket
 * Method:    _setReceiveBufferSize
 * Signature: (II)I
 */
JNIEXPORT jint JNICALL Java_net_RawSocket__1setReceiveBufferSize
  (JNIEnv *, jobject, jint, jint);

/*
 * Class:     net_RawSocket
 * Method:    _getErrnoString
 * Signature: ()Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_net_RawSocket__1getErrnoString
  (JNIEnv *, jclass);

/*
 * Class:     net_RawSocket
 * Method:    getProtocolByName
 * Signature: (Ljava/lang/String;)I
 */
JNIEXPORT jint JNICALL Java_net_RawSocket_getProtocolByName
  (JNIEnv *, jclass, jstring);

/*
 * Class:     net_RawSocket
 * Method:    _select
 * Signature: ([I[Z[Z[ZI)I
 */
JNIEXPORT jint JNICALL Java_net_RawSocket__1select
  (JNIEnv *, jclass, jintArray, jbooleanArray, jbooleanArray, jbooleanArray, jint);

#ifdef __cplusplus
}
#endif
#endif
/* Header for class net_RawSocket_MessageInfo */

#ifndef _Included_net_RawSocket_MessageInfo
#define _Included_net_RawSocket_MessageInfo
#ifdef __cplusplus
extern "C" {
#endif
#ifdef __cplusplus
}
#endif
#endif
/* Header for class net_RawIPv4Socket */

#ifndef _Included_net_RawIPv4Socket
#define _Included_net_RawIPv4Socket
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     net_RawIPv4Socket
 * Method:    _send
 * Signature: (I[B[BI[BIIII)I
 */
JNIEXPORT jint JNICALL Java_net_RawIPv4Socket__1send
  (JNIEnv *, jobject, jint, jbyteArray, jbyteArray, jint, jbyteArray, jint, jint, jint, jint);

/*
 * Class:     net_RawIPv4Socket
 * Method:    _setReceiveTTL
 * Signature: (IZ)I
 */
JNIEXPORT jint JNICALL Java_net_RawIPv4Socket__1setReceiveTTL
  (JNIEnv *, jobject, jint, jboolean);

/*
 * Class:     net_RawIPv4Socket
 * Method:    _getReceiveTTL
 * Signature: (I)I
 */
JNIEXPORT jint JNICALL Java_net_RawIPv4Socket__1getReceiveTTL
  (JNIEnv *, jobject, jint);

/*
 * Class:     net_RawIPv4Socket
 * Method:    _setReceiveTOS
 * Signature: (IZ)I
 */
JNIEXPORT jint JNICALL Java_net_RawIPv4Socket__1setReceiveTOS
  (JNIEnv *, jobject, jint, jboolean);

/*
 * Class:     net_RawIPv4Socket
 * Method:    _getReceiveTOS
 * Signature: (I)I
 */
JNIEXPORT jint JNICALL Java_net_RawIPv4Socket__1getReceiveTOS
  (JNIEnv *, jobject, jint);

/*
 * Class:     net_RawIPv4Socket
 * Method:    _setTOS
 * Signature: (II)I
 */
JNIEXPORT jint JNICALL Java_net_RawIPv4Socket__1setTOS
  (JNIEnv *, jobject, jint, jint);

/*
 * Class:     net_RawIPv4Socket
 * Method:    _getTOS
 * Signature: (I)I
 */
JNIEXPORT jint JNICALL Java_net_RawIPv4Socket__1getTOS
  (JNIEnv *, jobject, jint);

/*
 * Class:     net_RawIPv4Socket
 * Method:    _setTTL
 * Signature: (II)I
 */
JNIEXPORT jint JNICALL Java_net_RawIPv4Socket__1setTTL
  (JNIEnv *, jobject, jint, jint);

/*
 * Class:     net_RawIPv4Socket
 * Method:    _getTTL
 * Signature: (I)I
 */
JNIEXPORT jint JNICALL Java_net_RawIPv4Socket__1getTTL
  (JNIEnv *, jobject, jint);

/*
 * Class:     net_RawIPv4Socket
 * Method:    _setIPHeaderInclude
 * Signature: (IZ)I
 */
JNIEXPORT jint JNICALL Java_net_RawIPv4Socket__1setIPHeaderInclude
  (JNIEnv *, jobject, jint, jboolean);

/*
 * Class:     net_RawIPv4Socket
 * Method:    _getIPHeaderInclude
 * Signature: (I)I
 */
JNIEXPORT jint JNICALL Java_net_RawIPv4Socket__1getIPHeaderInclude
  (JNIEnv *, jobject, jint);

/*
 * Class:     net_RawIPv4Socket
 * Method:    _receive
 * Signature: (I[BII[B[B[I[I[I)I
 */
JNIEXPORT jint JNICALL Java_net_RawIPv4Socket__1receive
  (JNIEnv *, jobject, jint, jbyteArray, jint, jint, jbyteArray, jbyteArray, jintArray, jintArray, jintArray);

/*
 * Class:     net_RawIPv4Socket
 * Method:    _getReceivePacketDestination
 * Signature: (I)I
 */
JNIEXPORT jint JNICALL Java_net_RawIPv4Socket__1getReceivePacketDestination
  (JNIEnv *, jobject, jint);

/*
 * Class:     net_RawIPv4Socket
 * Method:    _setReceivePacketDestination
 * Signature: (IZ)I
 */
JNIEXPORT jint JNICALL Java_net_RawIPv4Socket__1setReceivePacketDestination
  (JNIEnv *, jobject, jint, jboolean);

/*
 * Class:     net_RawIPv4Socket
 * Method:    _bind
 * Signature: (I[BI)I
 */
JNIEXPORT jint JNICALL Java_net_RawIPv4Socket__1bind
  (JNIEnv *, jobject, jint, jbyteArray, jint);

#ifdef __cplusplus
}
#endif
#endif
/* Header for class net_RawIPv6Socket */

#ifndef _Included_net_RawIPv6Socket
#define _Included_net_RawIPv6Socket
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     net_RawIPv6Socket
 * Method:    _send
 * Signature: (I[B[BI[BIIII)I
 */
JNIEXPORT jint JNICALL Java_net_RawIPv6Socket__1send
  (JNIEnv *, jobject, jint, jbyteArray, jbyteArray, jint, jbyteArray, jint, jint, jint, jint);

/*
 * Class:     net_RawIPv6Socket
 * Method:    _receive
 * Signature: (I[BII[B[B[I[I[I)I
 */
JNIEXPORT jint JNICALL Java_net_RawIPv6Socket__1receive
  (JNIEnv *, jobject, jint, jbyteArray, jint, jint, jbyteArray, jbyteArray, jintArray, jintArray, jintArray);

/*
 * Class:     net_RawIPv6Socket
 * Method:    _getReceivePacketDestination
 * Signature: (I)I
 */
JNIEXPORT jint JNICALL Java_net_RawIPv6Socket__1getReceivePacketDestination
  (JNIEnv *, jobject, jint);

/*
 * Class:     net_RawIPv6Socket
 * Method:    _setReceivePacketDestination
 * Signature: (IZ)I
 */
JNIEXPORT jint JNICALL Java_net_RawIPv6Socket__1setReceivePacketDestination
  (JNIEnv *, jobject, jint, jboolean);

/*
 * Class:     net_RawIPv6Socket
 * Method:    _setReceiveTTL
 * Signature: (IZ)I
 */
JNIEXPORT jint JNICALL Java_net_RawIPv6Socket__1setReceiveTTL
  (JNIEnv *, jobject, jint, jboolean);

/*
 * Class:     net_RawIPv6Socket
 * Method:    _getReceiveTTL
 * Signature: (I)I
 */
JNIEXPORT jint JNICALL Java_net_RawIPv6Socket__1getReceiveTTL
  (JNIEnv *, jobject, jint);

/*
 * Class:     net_RawIPv6Socket
 * Method:    _setReceiveTOS
 * Signature: (IZ)I
 */
JNIEXPORT jint JNICALL Java_net_RawIPv6Socket__1setReceiveTOS
  (JNIEnv *, jobject, jint, jboolean);

/*
 * Class:     net_RawIPv6Socket
 * Method:    _getReceiveTOS
 * Signature: (I)I
 */
JNIEXPORT jint JNICALL Java_net_RawIPv6Socket__1getReceiveTOS
  (JNIEnv *, jobject, jint);

/*
 * Class:     net_RawIPv6Socket
 * Method:    _setTOS
 * Signature: (II)I
 */
JNIEXPORT jint JNICALL Java_net_RawIPv6Socket__1setTOS
  (JNIEnv *, jobject, jint, jint);

/*
 * Class:     net_RawIPv6Socket
 * Method:    _getTOS
 * Signature: (I)I
 */
JNIEXPORT jint JNICALL Java_net_RawIPv6Socket__1getTOS
  (JNIEnv *, jobject, jint);

/*
 * Class:     net_RawIPv6Socket
 * Method:    _setTTL
 * Signature: (II)I
 */
JNIEXPORT jint JNICALL Java_net_RawIPv6Socket__1setTTL
  (JNIEnv *, jobject, jint, jint);

/*
 * Class:     net_RawIPv6Socket
 * Method:    _getTTL
 * Signature: (I)I
 */
JNIEXPORT jint JNICALL Java_net_RawIPv6Socket__1getTTL
  (JNIEnv *, jobject, jint);

/*
 * Class:     net_RawIPv6Socket
 * Method:    _bind
 * Signature: (I[BI)I
 */
JNIEXPORT jint JNICALL Java_net_RawIPv6Socket__1bind
  (JNIEnv *, jobject, jint, jbyteArray, jint);

#ifdef __cplusplus
}
#endif
#endif
